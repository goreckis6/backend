name: Deploy Backend

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Test SSH Connection
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.BACKEND_VPS_HOST }}
          username: ${{ secrets.BACKEND_VPS_USERNAME }}
          key: ${{ secrets.BACKEND_VPS_SSH_KEY }}
          script: |
            echo "Testing SSH connection..."
            hostname
            whoami
            uptime
            echo "SSH connection successful!"

      - name: Setup VPS Environment
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.BACKEND_VPS_HOST }}
          username: ${{ secrets.BACKEND_VPS_USERNAME }}
          key: ${{ secrets.BACKEND_VPS_SSH_KEY }}
          script: |
            set -euo pipefail
            
            echo "Setting up VPS environment..."
            
            # Update system packages
            sudo apt update -y
            
            # Install Node.js 20 if not installed
            if ! command -v node &> /dev/null || ! node --version | grep -q "v20"; then
              echo "Installing Node.js 20..."
              curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
              sudo apt-get install -y nodejs
            fi
            
            # Install PM2 globally if not installed
            if ! command -v pm2 &> /dev/null; then
              echo "Installing PM2..."
              sudo npm install -g pm2
            fi
            
            # Install Git if not installed
            if ! command -v git &> /dev/null; then
              echo "Installing Git..."
              sudo apt install -y git
            fi
            
            # Create application directory
            mkdir -p /home/debian/morphy-backend
            cd /home/debian/morphy-backend
            
            # Clone repository if it doesn't exist, otherwise pull
            if [ ! -d ".git" ]; then
              echo "Cloning repository..."
              git clone https://github.com/goreckis6/backend.git .
            else
              echo "Pulling latest changes..."
              git pull origin main
            fi
            
            echo "VPS environment setup complete!"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.BACKEND_VPS_HOST }}
          username: ${{ secrets.BACKEND_VPS_USERNAME }}
          key: ${{ secrets.BACKEND_VPS_SSH_KEY }}
          script: |
            set -euo pipefail
            
            echo "Deploying backend with Traefik (no Docker)..."
            
            # Create directory if it doesn't exist
            sudo mkdir -p /opt/backend
            sudo chown -R debian:debian /opt/backend
            cd /opt/backend
            
            # Clone repository if it doesn't exist, otherwise pull
            if [ ! -d ".git" ]; then
              echo "Cloning repository..."
              git clone https://github.com/goreckis6/backend.git .
            else
              echo "Pulling latest changes..."
              git pull origin main
            fi
            
            # Install dependencies and build
            npm ci
            npm run build
            
            # Install Python and create virtual environment for image processing
            sudo apt update
            sudo apt install -y python3 python3-pip python3-venv
            sudo mkdir -p /opt/venv
            sudo chown -R debian:debian /opt/venv
            python3 -m venv /opt/venv
            /opt/venv/bin/pip install Pillow
            
            # Stop existing PM2 process if running
            pm2 stop morphy-backend 2>/dev/null || true
            pm2 delete morphy-backend 2>/dev/null || true
            
            # Start application with PM2
            pm2 start ecosystem.config.cjs
            
            # Save PM2 configuration
            pm2 save
            
            # Setup Traefik for SSL and routing
            echo "Setting up Traefik..."
            
            # Ensure Traefik directory exists (files already in repo)
            sudo mkdir -p /opt/backend/traefik
            
            # Test backend is running
            echo "Testing backend connectivity..."
            curl -f http://localhost:3000/health || echo "Backend not accessible on localhost:3000"
            netstat -tlnp | grep :3000 || echo "Port 3000 not listening"
            
            # Restart Traefik using repo compose file
            docker compose -f traefik-only.yml down || true
            docker compose -f traefik-only.yml up -d --remove-orphans

            echo "Backend deployed successfully!"
            pm2 status
            docker compose -f traefik-only.yml ps
            
            # Test Traefik routing
            echo "Testing Traefik routing..."
            curl -f https://api.morphyimg.com/health || echo "Traefik routing failed"
